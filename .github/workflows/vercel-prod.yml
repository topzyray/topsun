name: CI/CD â€“ Next.js + Vercel for Topsun

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      # Cache node_modules folder for faster installs
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Inject environment variables
      - name: Set Environment Variables
        run: |
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_NODE_ENV=${{ secrets.NEXT_PUBLIC_NODE_ENV }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SECRET_KEY=${{ secrets.NEXT_PUBLIC_SECRET_KEY }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_NAME_FULL=${{ secrets.NEXT_PUBLIC_SCHOOL_NAME_FULL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_NAME_SHORT=${{ secrets.NEXT_PUBLIC_SCHOOL_NAME_SHORT }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_EMAIL=${{ secrets.NEXT_PUBLIC_SCHOOL_EMAIL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_PHONE=${{ secrets.NEXT_PUBLIC_SCHOOL_PHONE }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_ADDRESS=${{ secrets.NEXT_PUBLIC_SCHOOL_ADDRESS }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_CITY=${{ secrets.NEXT_PUBLIC_SCHOOL_CITY }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_COUNTRY=${{ secrets.NEXT_PUBLIC_SCHOOL_COUNTRY }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_MOTTO=${{ secrets.NEXT_PUBLIC_SCHOOL_MOTTO }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SCHOOL_DOMAIN=${{ secrets.NEXT_PUBLIC_SCHOOL_DOMAIN }}" >> $GITHUB_ENV

      # Lint the code
      - name: Lint
        run: npm run lint

      # Run type check
      - name: Type Check
        run: npm run type-check

      # Build the project (optional if Vercel handles it)
      - name: Build Project
        run: npm run build

  deploy:
    name: Deploy to Vercel
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Deploy to Vercel using production config
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
